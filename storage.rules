rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidUser() {
      return isAuthenticated() && 
             request.auth.uid != null && 
             request.auth.token.email_verified == true;
    }
    
    function isSystemFunction() {
      // Allow Firebase Functions service account
      return request.auth.token.firebase.sign_in_provider == 'custom' &&
             request.auth.token.firebase.identities == {};
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidDocument() {
      return request.resource.contentType.matches('application/pdf|text/.*|application/msword|application/vnd.openxmlformats-officedocument.*|application/json') &&
             request.resource.size < 20 * 1024 * 1024; // 20MB limit
    }
    
    // User profile images - users can only access their own
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidUser() && isValidImage();
      allow delete: if isOwner(userId) && isValidUser();
    }
    
    // User uploaded documents and files
    match /users/{userId}/documents/{allPaths=**} {
      allow read, write: if isOwner(userId) && isValidUser();
      allow create: if isOwner(userId) && isValidUser() && 
                      (isValidImage() || isValidDocument());
      allow delete: if isOwner(userId) && isValidUser();
    }
    
    // User portfolio charts and analysis files
    match /users/{userId}/portfolio/{allPaths=**} {
      allow read, write: if isOwner(userId) && isValidUser();
      allow create: if isOwner(userId) && isValidUser() && 
                      (isValidImage() || isValidDocument());
    }
    
    // User-generated market analysis charts and images
    match /users/{userId}/analysis/{allPaths=**} {
      allow read: if isValidUser(); // Other authenticated users can see analysis
      allow write: if isOwner(userId) && isValidUser() && isValidImage();
      allow delete: if isOwner(userId) && isValidUser();
    }
    
    // Market data charts and images (public read, functions write)
    match /market/{allPaths=**} {
      allow read: if true; // Public read access for market data
      allow write: if isSystemFunction() && isValidImage();
    }
    
    // Market briefs assets (charts, graphs generated by functions)
    match /briefs/{briefId}/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if isSystemFunction() && isValidImage();
    }
    
    // Market news images and media (public read, functions write)
    match /news/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if isSystemFunction() && isValidImage();
    }
    
    // System generated reports and exports
    match /reports/{userId}/{allPaths=**} {
      allow read: if isOwner(userId) && isValidUser();
      allow write: if isSystemFunction() || 
                     (isOwner(userId) && isValidUser() && isValidDocument());
    }
    
    // Temporary uploads (24-hour auto-delete)
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if isOwner(userId) && isValidUser();
      allow create: if isOwner(userId) && isValidUser() && 
                      (isValidImage() || isValidDocument());
    }
    
    // System assets (logos, icons, etc.) - public read, admin write
    match /system/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if isValidUser() && 
                     request.auth.token.admin == true &&
                     isValidImage();
    }
    
    // App assets and branding (public read, admin write)
    match /assets/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if isValidUser() && 
                     request.auth.token.admin == true && 
                     isValidImage();
    }
    
    // Function-generated cache files (functions only)
    match /cache/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isSystemFunction();
    }
    
    // Default deny rule for any unmatched paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
